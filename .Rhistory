dir()
l
dir()
install.packages("BiocManager")
BiocManager::install('survminer')
BiocManager::install('survminer')
BiocManager::install('survminer')
require(survminer)
install.packages("ggpubr")
install.packages("ggpubr")
require(survminer)
install.packages("ggpubr")
require(survminer)
install.packages("abind")
BiocManager::install("abind")
require(ggpubr)
require(survminer)
BiocManager::install("KMsurv")
require(survminer)
BiocManager::install("glmnet")
require(glmet)
require(glmnet)
suppressMessages(
{
require(org.Hs.eg.db)
require(clusterProfiler)
require(enrichplot)
require(maftools)
require(ggpubr)
require(ggthemes)
require(circlize)
require(ComplexHeatmap)
require(patchwork)
require(tidyverse)
require(magrittr)
require(data.table)
require(biodf)
}
)
setwd("~/data/project/23/0411_crc_ccc")
load(".RData")
# 1) ds list
ds_list = list()
ds_list$local$clin =
fread("~/data/project/db/local/raw/crc_seq/crc_seq_clin.txt") %>%
as.data.frame() %>%
mutate(rfs_time = rfs_time/30,os_time = os_time/30) %>%
set_rownames(.$sample)  %>%
fun_surv_parsing(c("os_time","os_status",1),input_na_value = "NA")
ds_list$local$expr =
fread("~/data/project/db/local/raw/crc_seq/tpm_data_61.xls") %>%
as.data.frame() %>%
{.[!duplicated(.$Symbol),]} %>%
set_rownames(.$Symbol) %>%
dplyr::select(all_of(ds_list$local$clin$sample)) %>%
add(0.001) %>%
log2()
# 2)
model_coef = read.csv("data/old_model.csv",row.names = 1)
# 3)
clin_list = list()
clin_list$local =
ds_list$local$clin %>%
fun_merge_matrix(
ds_list$local$expr,
input_variables = rownames(model_coef)
) %>%
fun_sig_weighted_sum(input_coef = model_coef) %>%
filter(!((Risk_score < quantile(Risk_score,0.3) & status == 1) |
(Risk_score > quantile(Risk_score,0.7) & status == 0)))
tcga.clin.rs %<>%
mutate(sample = `Sample ID`) %>%
fun_merge_df(
input_df_merge = "~/data/project/db/tcga/others/infiltration_estimation_for_tcga.csv"
) %>%
fun_merge_df(
input_df_merge = "~/data/project/db/tcga/tide/tcga_crc.csv",
input_variables = c("TIDE","Dysfunction","Exclusion"),
df_merge_key = "Patient"
)
# get others list
others_list =list()
others_list$tcga_clin2 =
fread("~/data/project/db/tcga/cbio/tcga_firehose_pan.tsv") %>%
janitor::clean_names() %>%
mutate(sample = sample_id) %>%
as.data.frame() %>%
set_rownames(.$sample)
# theme
tn = function(...){
theme_minimal()+
theme(panel.grid = element_blank(),
panel.background = element_rect(fill =NA,color = "black"),
axis.ticks = element_line(color ="black"))
}
palette = "lancet"
require(devtools)
load_all()
